@using GruberGerichteWeb.Client.Helpers


<div>
    <div class="row">
        <div class="col-3">
            <ul class="list-group">
                <li class="list-group-item list-group-item-dark"><b>Select Option</b></li>
                @foreach (var item in NoSelected)
                {
                    <li @onclick="@(() => Select(item))" class="list-group-item">@item.Value</li>
                }
            </ul>
        </div>
        <div class="col-1 text-center">
            <button type="button" class="btn btn-light m-1" @onclick="SelectAll">@addAllText</button>
            <br />
            <button type="button" class="btn btn-light m-1" @onclick="DeselectAll">@removeAllText</button>
        </div>
        <div class="col-3">
            <ul class="list-group">
                <li class="list-group-item list-group-item-dark"><b>Selected</b></li>
                @foreach (var item in Selected)
                {
                    <li @onclick="@(() => Deselect(item))" class="list-group-item">@item.Value</li>
                }
            </ul>
        </div>
    </div>
</div>


@code {
    private string addAllText = ">>";
    private string removeAllText = "<<";
    [Parameter]
    public List<MultipleSelectorModel> NoSelected { get; set; } = new List<MultipleSelectorModel>();
    [Parameter]
    public List<MultipleSelectorModel> Selected { get; set; } = new List<MultipleSelectorModel>();

    private void Select(MultipleSelectorModel item)
    {
        NoSelected.Remove(item);
        Selected.Add(item);
    }

    private void Deselect(MultipleSelectorModel item)
    {
        Selected.Remove(item);
        NoSelected.Add(item);
    }

    private void SelectAll()
    {
        Selected.AddRange(NoSelected);
        NoSelected.Clear();
    }

    private void DeselectAll()
    {
        NoSelected.AddRange(Selected);
        Selected.Clear();
    }
}
